# Tmux Config

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃    Builtin Bindings Cheatsheet (sometimes I forget these)   ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
#  prefix-)  → Next session
#  prefix-(  → Previous session

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃                                                 ┃
# ┃    TPM Plugins  (→ Loaded at TPM Load section)  ┃
# ┃                               ̅ ̅ ̅ ̅ ̅ ̅ ̅ ̅           ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
# TPM manages all of the following plugins and will autoinstall them.

# Key Bindings (Plugin Management)
# ————————————————————————————————
# prefix + I       → Install & refresh plugins
# prefix + U       → Updates plugins
# prefix + Alt+u   → Uninstall plugins

# Initialize Plugins
# ————————————————————————————————
set-option -g @plugin 'tmux-plugins/tpm'              # https://github.com/tmux-plugins/tpm
set-option -g @plugin 'tmux-plugins/tmux-sensible'    # https://github.com/tmux-plugins/tmux-sensible

# Navigation & search
set-option -g @plugin 'wfxr/tmux-fzf-url'             # https://github.com/wfxr/tmux-fzf-url
set-option -g @plugin 'tmux-plugins/tmux-copycat'     # https://github.com/tmux-plugins/tmux-copycat
set-option -g @plugin 'Morantron/tmux-fingers'        # https://github.com/Morantron/tmux-fingers
set-option -g @plugin 'roosta/tmux-fuzzback'          # https://github.com/roosta/tmux-fuzzback

# Session & window management
set-option -g @plugin 'tmux-plugins/tmux-sessionist'  # https://github.com/tmux-plugins/tmux-sessionist
set-option -g @plugin 'tmux-plugins/tmux-yank'        # https://github.com/tmux-plugins/tmux-yank
set-option -g @plugin 'omerxx/tmux-floax'             # https://github.com/omerxx/tmux-floax

# Persistence & automation
set-option -g @plugin 'tmux-plugins/tmux-continuum'   # https://github.com/tmux-plugins/tmux-continuum
set-option -g @plugin 'tmux-plugins/tmux-resurrect'   # https://github.com/tmux-plugins/tmux-resurrect

# tmux-resurrect
# ————————————————————————————————
# Allows capturing/restoring pane contents.
set-option -g @resurrect-capture-pane-contents 'on'

# Restore vim/nvim session state.
set-option -g @resurrect-strategy-vim 'session'
set-option -g @resurrect-strategy-nvim 'session'

# tmux-continuum
# ————————————————————————————————
# Auto-save.
set-option -g @continuum-restore "on"
set-option -g @continuum-save-interval 5

# tmux-floax
# ————————————————————————————————
# Open floating window without prefix binding.
set-option -g @floax-bind '-n M-.'

# tmux-sessionizer
# ————————————————————————————————
# Ref: https://github.com/jrmoulton/tmux-sessionizer
bind-key -N "Tmux Sessionizer: Open a new Project (command: tms)" o display-popup -E "tms"

# Generates missing worktree windows for the active session or a provided session_name.
bind-key -N "Tmux Sessionizer: Refresh Worktree (command: tms refresh)" C-i display-popup -E "tms refresh"

# Display the current session's windows with a fuzzy finder and a preview window.
bind-key -N "Tmux Sessionizer: Search Windows (command: tms windows)" C-w display-popup -E "tms windows"

bind-key -N "Tmux Sessionizer Mode" C-o switch-client -T TMUX_SESSIONIZER
bind-key -N "Tmux Sessionizer Mode: Switch Session (command: tms switch)" -T TMUX_SESSIONIZER C-o display-popup -E "tms switch"

# Marks: 0-5
bind-key -N "Tmux Sessionizer Mode: Go-to Neovim Config (command: tms marks open 0)" -T TMUX_SESSIONIZER 0 display-popup -E "tms marks open 0"
bind-key -N "Tmux Sessionizer Mode: Go-to Homelab (command: tms marks open 1)" -T TMUX_SESSIONIZER 1 display-popup -E "tms marks open 1"
bind-key -N "Tmux Sessionizer Mode: Go-to essential-feed-case-study (command: tms marks open 2)" -T TMUX_SESSIONIZER 2 display-popup -E "tms marks open 2"
bind-key -N "Tmux Sessionizer Mode: Go-to Maeve (command: tms marks open 3)" -T TMUX_SESSIONIZER 3 display-popup -E "tms marks open 3"
bind-key -N "Tmux Sessionizer Mode: Go-to Ivy (command: tms marks open 4)" -T TMUX_SESSIONIZER 4 display-popup -E "tms marks open 4"
bind-key -N "Tmux Sessionizer Mode: Go-to pqi (command: tms marks open 5)" -T TMUX_SESSIONIZER 5 display-popup -E "tms marks open 5"

# ┏━━━━━━━━━━━━━┓
# ┃    Theme    ┃
# ┗━━━━━━━━━━━━━┛

# Move status bar to top of terminal.
set-option -g status-position top

# Enable useful window titles.
set-option -g set-titles on
set-option -g set-titles-string "#H | #S:#W | #T"

set -g window-status-format " #I  #W "
set -g window-status-current-format " #[bold]#I  #W #[default]"

# dracula/tmux
# ————————————————————————————————
# Ref: https://github.com/dracula/tmux/blob/master/docs/CONFIG.md

set-option -g @plugin 'dracula/tmux'

set-option -g @dracula-colors "
rosewater='#f4dbd6'
flamingo='#f0c6c6'
pink='#f5bde6'
mauve='#c6a0f6'
red='#ed8796'
maroon='#ee99a0'
peach='#f5a97f'
yellow='#eed49f'
green='#a6da95'
sky='#91d7e3'
teal='#8bd5ca'
sapphire='#7dc4e4'
blue='#8aadf4'
lavender='#b7bdf8'
text='#cad3f5'
subtext1='#b8c0e0'
subtext0='#a5adcb'
overlay2='#939ab7'
overlay1='#8087a2'
overlay0='#6e738d'
surface2='#5b6078'
surface1='#494d64'
surface0='#363a4f'
base='#24273a'
mantle='#1e2030'
crust='#181926'
"

set-option -g @dracula-show-powerline true

set-option -g @dracula-refresh-rate 1
set-option -g @dracula-show-flags true
set-option -g @dracula-show-left-icon session
set-option -g @dracula-left-icon-padding 0
set-option -g @dracula-border-contrast true
set-option -g @dracula-show-empty-plugins false

set-option -g @dracula-show-ssh-session-port true
set-option -g @dracula-show-ssh-only-when-connected true

set-option -g @dracula-krbtgt-principal "principal"
set-option -g @dracula-cpu-arch-label "󰍛 "
set-option -g @dracula-continuum-mode alert

set-option -g @dracula-synchronize-panes-label "Sync"
set-option -g @dracula-synchronize-panes-auto-hide true
set-option -g @dracula-synchronize-panes-refresh-rate "0.5"

set-option -g @dracula-plugins "ssh-session krbtgt cpu-arch continuum synchronize-panes"

set-option -g @dracula-ssh-session-colors "crust red"
set-option -g @dracula-krbtgt-colors "crust peach"
set-option -g @dracula-cpu-arch-colors "crust yellow"
set-option -g @dracula-continuum-colors "crust mauve"
set-option -g @dracula-synchronize-panes-colors "crust green"

# ┏━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃    General Settings    ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━┛

# Set the default copy mode to copy-mode-vi.
set-window-option -g mode-keys vi

# Required for roxma/vim-tmux-clipboard to work correctly.
set-option -g focus-events on

# Keep pane & window numbering consistent.
set-option -g pane-base-index 1

# After a window is closed, sequentially update the numbers of the remaining windows.
set-option -g renumber-windows on

# Resize panes to currently connected client.
set-option -g aggressive-resize

# Prevent auto-renaming windows.
set-window-option -g automatic-rename off
set-option -g allow-rename off

# Increase terminal history limit.
set-option -g history-limit 10000

# Use system-clipboard.
set-option -g set-clipboard external

# Increase key repeat time-limit (default = 500 milliseconds).
set-option -g repeat-time 1500

# Terminal settings.
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",screen-256color:Tc"
set-option -ga terminal-overrides ",xterm-kitty:Ss=\E[%p1%d q:Se=\E[2 q"

# Eliminate escape key lag.
set-option -s escape-time 0

# Terminal notifications (bell & flash).
set-option -g bell-action any
set-option -g visual-activity on

# set-window-option -g monitor-activity on

# ┏━━━━━━━━━━━━━━━━━━━━┓
# ┃    Key Bindings    ┃
# ┗━━━━━━━━━━━━━━━━━━━━┛

# Prefix Key - Ctrl+d
# ————————————————————————————————
unbind-key C-b
unbind-key C-d
set-option -g prefix C-d

# When the prefix key "hangs", the next key can be misinterpreted in Vim/Nvim, so send it literally.
bind-key a send-keys a

# Pane switching (Vim/Nvim aware)
# ————————————————————————————————
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -N "Pane switching: Left"  -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -N "Pane switching: Down"  -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -N "Pane switching: Up"    -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -N "Pane switching: Right" -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -N "Pane switching: Last (toggle)" -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" 'select-pane -l'

bind-key -T copy-mode-vi -N "Pane switching: Left" C-h select-pane -L
bind-key -T copy-mode-vi -N "Pane switching: Down" C-j select-pane -D
bind-key -T copy-mode-vi -N "Pane switching: Up" C-k select-pane -U
bind-key -T copy-mode-vi -N "Pane switching: Right" C-l select-pane -R
bind-key -T copy-mode-vi -N "Pane switching: Last" 'C-\' select-pane -l

bind-key -N "Pane switching: Left (fallback Vim/Nvim plugin fails)" -r C-h select-pane -L
bind-key -N "Pane switching: Down (fallback Vim/Nvim plugin fails)" -r C-j select-pane -D
bind-key -N "Pane switching: Up (fallback Vim/Nvim plugin fails)" -r C-k select-pane -U
bind-key -N "Pane switching: Right (fallback Vim/Nvim plugin fails)" -r C-l select-pane -R
bind-key -N "Pane switching: Last (fallback Vim/Nvim plugin fails)" -r 'C-\' select-pane -l

# Fallback navigation (for nested sessions)
# ——————————————————————————————————————————
#bind-key -r M-H select-pane -L
#bind-key -r M-J select-pane -D
#bind-key -r M-K select-pane -U
#bind-key -r M-L select-pane -R

# Resize Mode
# ————————————————————————————————
bind-key -N "Resize Mode: Start" r switch-client -T RESIZE

bind-key -N "Resize Mode: Resize Up" -T RESIZE k resize-pane -U \; switch-client -T RESIZE
bind-key -N "Resize Mode: Resize Up (by 5)" -T RESIZE K resize-pane -U 5 \; switch-client -T RESIZE

bind-key -N "Resize Mode: Resize Down" -T RESIZE j resize-pane -D \; switch-client -T RESIZE
bind-key -N "Resize Mode: Resize Down (by 5)" -T RESIZE J resize-pane -D 5 \; switch-client -T RESIZE

bind-key -N "Resize Mode: Resize Left" -T RESIZE h resize-pane -L \; switch-client -T RESIZE
bind-key -N "Resize Mode: Resize Left (by 5)" -T RESIZE H resize-pane -L 5 \; switch-client -T RESIZE

bind-key -N "Resize Mode: Resize Right" -T RESIZE l resize-pane -R \; switch-client -T RESIZE
bind-key -N "Resize Mode: Resize Right (by 5)" -T RESIZE L resize-pane -R 5 \; switch-client -T RESIZE

# Sync Mode
# ————————————————————————————————
bind-key -N "Sync Mode: Toggle" '\' set-window-option synchronize-panes

# Mouse mode
# ————————————————————————————————
set-option -g mouse on

# Provide bindings w/ notifications for toggling.
bind-key -N "Mouse Mode: on" m set-option -g mouse on \; display 'Mouse: on'
bind-key -N "Mouse Mode: off" M set-option -g mouse off \; display 'Mouse: off'

# Miscillaneous bindings
# ————————————————————————————————
bind-key -N "Join: the current pane with its adjacent pane" j join-pane -t !
bind-key -N "Clear Screen: workaround for navigate → (right)" L send-keys 'C-l'
bind-key -N "Open New Window: at default session path" b new-window
bind-key -N "Open New Window: at current path" c new-window -c '#{pane_current_path}'
bind-key -N "Suspend the current Tmux client (works likes C-z in Vim/Nvim, but for Tmux)" C-z suspend-client
bind-key -N "Fuzzy search all key bindings (command: tmux list-keys -Na | fzf --exact)" v display-popup -E "tmux list-keys -Na | fzf --exact"
# bind-key P -N "Paste from the system clipboard" run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# ┏━━━━━━━━━━━━━━━━┓
# ┃    Load TPM    ┃
# ┗━━━━━━━━━━━━━━━━┛

# Automatically install TPM (Tmux Plugin Manager), if it isn't already.
if 'test ! -d $HOME/.tmux/plugins/tpm -a "$(command -v git)" != ""' \
  'run "git clone https://github.com/tmux-plugins/tpm $HOME/.tmux/plugins/tpm \
  && $HOME/.tmux/plugins/tpm/tpm && $HOME/.tmux/plugins/tpm/bin/install_plugins"'

# Load TPM — keep at the bottom of .tmux.conf.
run '~/.tmux/plugins/tpm/tpm'

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃    Stuff that has to go after TPM Load    ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

bind-key -N "Send C-d to the current process (Double-tap C-d to send one C-d)" C-d send-prefix

# macOS: fix tmux-resurrect not sourcing ~/.bash_profile
# Ref: https://github.com/tmux-plugins/tmux-resurrect/issues/94
is_mac='test "$(uname -s)" == "Darwin"'
if-shell "$is_mac" 'set-option -g default-command "/opt/homebrew/bin/bash"'
